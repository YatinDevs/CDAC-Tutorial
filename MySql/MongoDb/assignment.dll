use assignment;
db.restaurant.find();
db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0});
db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1});
db.restaurant.find({},{restaurant_id:1,name:1,borough:1,"address.zipcode":1,_id:0});
db.restaurant.find({borough:"Bronx"},{borough:1,name:1});
db.restaurant.find({borough:"Bronx"},{borough:1,name:1,_id:0}).limit(5);
db.restaurant.find({borough:"Bronx"},{borough:1,name:1,_id:0}).skip(5).limit(5);
db.restaurant.find({grades:{$elemMatch:{"score":{$gt:90}}}},{name:1,"grades.score":1});
db.restaurant.find({
                     cuisine:{$ne:"American"},
                     "grades.grade" :"A" ,
                     borough: {$ne:"Brooklyn"}
                     }
                     ).sort({cuisine:-1});
                 
db.restaurant.find({name:/^Wil/},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0});
db.restaurant.find({name:/ces$/},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0});
db.restaurant.find({name:/.*Reg.*/},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0});
db.restaurant.find({$or:[{cuisine:"American"},{cuisine:"Chinese"}],borough:"Bronx"},{name:1});

db.restaurant.find(
{borough:{$in:["Staten Island","Queens","Bronx","Brooklyn"]}},
{
restaurant_id:1,
name:1,borough:1,
cuisine:1
}
);


db.restaurant.find(
{borough:{$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},
{
restaurant_id:1,
name:1,borough:1,
cuisine:1
}
);